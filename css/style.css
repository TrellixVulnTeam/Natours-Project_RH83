/*
COLOURS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485
*/

/*
*Implementing a simple reset using the universal selector(selects all elements on the page)
*that is: Applying a given set of properties on the entire page
*/

*{
    /* NOTE: by default, browsers apply a certain margin and padding to elements e.g h1 */
    margin: 0; 
    padding: 0;
    /* NOTE: the box-sizing changes the box model of elements so that the borders and padding are no
    * longer added to the total width or height specified for the box.
    */
    box-sizing: border-box;
}

body{
    /* NOTE: the universal font properties are better specified in the body element
    * this is because the properties related to fonts are usually inheritted(using the power of INHERITANCE)
    */
    font-family: Lato, sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7;
    color: #777777;
    padding: 30px;
}

.header{
    /* height: 95vh- this means the height at all times will be 95% of the VIEW PORT HRIGHT */
    height: 95vh;
    /* Backgorund-image -> Images can be placed untop of each other. This is achieved by including a comma seperated list of the image url's
    *  note that the first will be untop and the second will be behind(here, the gradient is untop and the image behind)
    *
    * Hint(linear-gradient) A third property can be added to describe the direction of the gradient
    */
    background-image: linear-gradient(
        to right bottom,
         rgba(126, 213, 111, 0.8),
          rgba(40, 180, 131, 0.8)),
        url("../img/hero.jpg");

    /* background-size: cover- this means that what ever the width of the viewport, the element will adapt nicely to the viewport */
    background-size: cover;
    /* background-position: top- This ensures that the top of the element(in this case the image) always stays no matter the 
    * viewport size....as well as center, bottom (characteristically speaking)
    */
    background-position: top;
    position: relative;

    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
    position: absolute;

    /* NOTE: the top and left properties begin count or take effect from the parent element which has its position set to relative.
    *  Notice that without the position of the parent element(header) set to relative, it begins its count from the screen axis
    */
    top: 40px;
    left: 40px;
}

.logo {
    /* NOTE: here, only the height is specified thereby allowing the browser to scale the width accordingly
    *  This is also applicable to the width being specified only also allowing the browser to scale the height accordingly
    *  Specifying the height should be more preferrable!
    */
    height: 35px;
}

.text-box {
    position: absolute;

    /* NOTE: The top and left properties positions the element at 50% of parent's height and 50% of parent's width.
    *  NOTE: The top, bottom, right and left properties are in relation to the parent element(header)
    */
    top: 45%;
    left: 50%;

    /* NOTE: This then positions the element at the center by subtracting 50% of the elements height and width respectively 
    *  NOTE: The translate x and y coordinates are in relation to the element itself(text-box)
    */
    transform: translate(-50%, -50%);
}

.heading-primary {
    color: #fff;
    text-transform: uppercase;
}

.heading-primary-main {
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;
}

.heading-primary-sub {
    display: block;
    font-size: 20px;
    font-weight: 400;
    letter-spacing: 17.4px;
}